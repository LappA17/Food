/*Если в начало body поставить
<script defer src="script.js"></script>
то атрибут дефер запустит этот скрипт только тогда когда он загрузится тем самым все будет работать 
и браузер дождется пока подгрузится скрипт 
1)скрипты с defer никогда не блокируют страницу 
2)скрипты с таким атрибутом выполняется когда наше дом дерево уже готово 
3) если добавить еще один тестовый скрипт с жс, и даже если на нем будет намного меньше мигабайте памяти
чем на основном то все равно они будут загружаться в одной последовности
4) Так мы можем запускать на страницу библиотеки к конкретным тегам к которым они должны применяться а
не на весь дом

<script async src="script.js"></script>
1)страница не ждет асинхронных скриптов, содержимое просто обробатывается и отоброжается 
2)событие дом контент лодед и асинхронные скрипты не ждут друг друга - то атрибут асинк начинает загру
жаться сразу же как к нему доходит страница - он загружается в фоном режиме, но при этом запускается 
сразу и он никого не ждет, так же ДРУГИЕ СКРИПТЫ его тоже не ждут !!!
3)когда мы используем async мы должны быть уверены что он никак не зависит от дом структур
*/

const script = document.createElement("script");
script.src = "test.js";//это мы создали скрипт который через апенд поместили в конец 
document.body.append(script) //помещает элемент в конец себя
/*это нам показывает что тест появляется с микро задержкой, а значится что тот скрипт который мы в 
ручную прописывали в начали бади прогружается быстрее, НО вообще такие подключеные скрипты априории 
имеют атрибут async а значит что они никого ЖДАТЬ НЕ БУДУТ */

const script = document.createElement("script");
script.src = "test.js";
script.async = false;
document.body.append(script);
// теперь будет ПОСЛЕДОВАТЕЛЬНОСТЬ
function loadScript(src) {
    const script = document.createElement("script");
script.src = src;
script.async = false;
document.body.append(script);
}
loadScript("test.js");
loadScript("some.js");
/*мы создаем еще два динамических скрипта которые будут отображаться на странице, но из-за того
что мы установили async = false они будут выполнятся строго друг за другом
теперь всегда будет сначало test потом some  */

/*<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
</head>
<body>
	<script defer src="script.js"></script>
     ИЛИ АСИНК <script async src="test.js"></script>

	<p>Hello WORLD</p>
</body>
</html> */