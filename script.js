function showFirstMessage (text) {
console.log(text);
}
showFirstMessage("hello world");
/* в круглых скобках передают аргументы функции
в строке где шоферст мас мы таким образом вызываем функцию
через запятую можно задавать бесконечно аргументов функции
если аргумент равен команде консоль лога то при взыове функции будет то чо в скобках (хело ворлд*/

    function showFirstMessage (text) {
        console.log(text);
        let num = 20;
        }
        showFirstMessage("hello world");
        console.log(num);
/*если мы обхявляем переменую внутри функции то снаружи она будет уже недоступна 
переменная вызванная внутри функции называется локальная
а вне функции глобальная*/ 

let num = 20;
function showFirstMessage (text) {
    console.log(text);
    num = 10;
    }
    showFirstMessage("hello world");
    console.log(num);
    /*внутри функции мы изменили значение переменной по этому если мы все выведим в консоль то будет
    hello world 10 
    НО если мы напишем не просто нам = 10 а лет нам = 10 то и выведим все в консоль , то будет 
    хелоу ворлд 20 потому что консоль лог выведен глобально а не в функции
    Но если консоль лог будет внутри функции то будет 10, а если взять консоль там и там то будет и 10 и 20*/

    let num = 20;
function showFirstMessage (text) {
    console.log(text);
    let num = 10;
    console.log(num);
    }
    showFirstMessage("hello world");
    console.log(num);
    /*если я удалю лет нам = 10 из функции и косноль лог который находится в функции с лет нам 20 глобальным
    выведу в консоль то будет значение 20 потому что если внутри функции нет значение лет то консоль будет
    искать глобально эту функцию и так постоянно будет искать переменную на уровень высше  */

    function calc(a, b) {
            return (a + b);
    }
    console.log(calc(4, 3));
    console.log(calc(5, 6));
    console.log(calc(10, 6));

    /* return возвращает функцию а ее значение в скобках 
    теперь если мы выведем в консоль то будет 7 11 16, то - есть нам возвращается сума от двух аргументов
    ретерн позволяет вернуть значение во внешний мир
    ВСЕ ЧТО ПОСЛЕ РЕТЕРН МЕРВТО, ЕСЛИ УСЛОВНО Я ПОСЛЕ РЕТЁРН ПРЯМ В ФУНКЦИИ НАПИШУ КОНСОЛЬ ЛОГ И ЧТО-ТО
    ВНУТРИ ТО ОНО БУДЕТ НЕИТАЕМО */

    function ret () {
        let num = 50;
        return num;
    }
    const anotherNum = ret();
    console.log(anotherNum)
    /*ЭТО очень часто используемый код, потому что таким образом мы выводим наружу результат функции
    когда я вывожу в консоль этот код мне выдаст 50
    Эта функция называется function declaration и она существует еще до того как наш код запуститься*/

    const logger = function () {
        console.log("hello")
    };
    logger();
    /*Функциональная вырожение в конце этой функции всегда ставится точка с запятой после скобок действия
    она уникальна тем что ее задают внутри переменной
    Если я выведу ее сейчас в консоль то будет хеллоу */

    const calculator = (a, b) => a + b;
    /*Третий и последний вид функции стрелочная
    мы создаем переменную и в нее помещаеем функцию 
    такая функция не имеет текста вызова
    там где а+б можно помести ть в скобки вот так {return a + b}
    так же функци может содержать только один аргумент например
    const calculator = (a) => a + b;  */
    const calculator = (a, b) => {
        console.log("1");
        return a + b;
        a + b;
    } ;