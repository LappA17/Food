const str = "test";
console.log(str.length);
//будет 4 (потмоу что 4 буквы)

const arr = [1, 2, 4]
console.log(arr.length)
//будет три потому что три это к-ство эллементвов внутри массива

const str = "test";
const arr = [1, 2, 4]
console.log(str[2])
//получим s - это третия буква слова тест (нумерация с 0)

const str = "test";
console.log(str.toUpperCase());
console.log(str)
/*метод toUpperCase , и когда мы выводим в консоль то получим TEST test 
то-есть оригинальный тест остается + ТЕСТ с большими буквами*/
const str = "test";
console.log(str.(toLowerCase));
console.log(str)
//маленькии буквы по аналогии 

const fruit = "Some fruit";
console.log(fruit.indexOf("fruit"))
//в консоли будет число 5 , потому что фрут начинается с 5 позиции (нумерация с 0)
//если вместо фрут мы подставим букву которой нет в переменной то будет значение -1

const logg = "Hello World";
console.log(logg.slice(6, 11))
/*получим world потому что с 6 начинается и с 11 заканчивается слово ворлд в конснтанте лог
при этом число 11 будет как число НЕВКЛЮЧАЯ, то-есть де-факто будет с 6-10 потому что последняя буква
10 но мы пишем 11 потмоу что неключая 11
ЕСЛИ МЫ укажем только один аргумент , то -есть 6, то оно будет вырезаться до конца всей строки, будь там
хоть 10 слов */
const logg = "Hello World";
console.log(logg.slice(-6, -1))
//получим Worl. потому что можно обрезать справа на лево благодаря отрицательному значению

const logg = "Hello World";
console.log(logg.substring(6, 11))
//почти тоже самое что слайс, только нельзя отрицательные значение вводить

const logg = "Hello World";
console.log(logg.substr(6, 5))
//указывает сколько символов необходимо вырезать

const num = 12.2 
console.log(Math.round(num))
//округляет число , в консоле будет 12, Мес с большой буквы  
const test = "12.2px";
console.log(parseInt(test))
//переводит свойство в числовое значение , несмотря что тест это строка и в пикселях но консоль
//вывел число 12 причем в числовом типе данных
const test = "12.2px";
console.log(parseFloat(test))
//возвращает число но уже 12.2 