./*document - это все что находится на html странице

window - это экран браузера, грубо говоря если ты будешь увеличивать или уменьшать окошко html структура
будет дальше на своем месте, но окно браузера становится меньше

screen - крайне редко используется , размер монитора каждого пользователя грубо говоря отличается*/

const box = document.querySelector(".box");

const width = box.clientWidth;
const height = box.clientHeight;

console.log(width, height)
/*это ширина и высота будет без учета margin и border
когда выведем в консоль то в консоле браузера получим 405 305
в css box имеет 400 ширину и padding с 4 сторон по 10 px
15 px занимает скрол страницы */

const width = box.offsetWidth;
const height = box.offsetHeight;
/*получим 400 и 350 - это как раз те значение которые были заданы в css */

const width = box.scrollWidth;
const height = box.scrollHeight
/* 385 1352 - 15 пискелей ушло на полосу прокрутки(скрол) по этому 385, а 1352 это вся высота */

const btn = document.querySelector("button");
btn.addEventListener("click", () => {
    box.style.height = box.scrollHeight + "px";
});

/* у Вани та на странице есть кнопка клик , и он хочет сделать так что при нажатие на эту кнопку весь
элемент на странице расскрывается, потому что прямо сейчас оно все сжато 
теперь когда мы получили кнопку со страницу мы навешиваем на нее обработчик событий 
обращаемся к его инлайн стилю  
теперь когда нажимаешь на клик то текст на всю страницу открывается*/

const btn = document.querySelector("button");
btn.addEventListener("click", () => {
    console.log(box.scrollTop)
});
/*теперь показывается в консоли сколько текста мы уже прочитали при нажатие на кнопку */

console.log(box.getBoundingClientRect());
/*в джава скрипте кординаты идут в левом верхнем углу экрана 
getBoundingClientRect - метод который дает все кординаты элемента
 в css right отчитывается по логике с границ от права до объекта, но в тут джаваскрипте будет right
 отчитываться с левой границы до правой границы элемента 
 bottom ровно тоже самое
 
 getBoundingClientRect().top - то я получу только значение топа и так же работает с другими сторонами
 
 
 Представь ситуацию что ты пишешь какой-то скрипт и тебе критечски важно знать показан ли элемент на стра-
 нице или нет
 в консоли браузера в elements-computed можно будет найти все стили которые применяютя к этому элементу*/

 const style = window.getComputedStyle(box);
 console.log(style);
 /* и мы увидем все computed стайлы которые применилсь к элементу*/
 const style = window.getComputedStyle(box);
 console.log(style.display);//теперь только получаем значение display
/* при помощи этого метода можно получить стили псевдоэлемента, при помощи джаваскрипта НЕ МОЖНО работать
с псевдоэлементами, но МОЖНО работать со стилями псевдоэлемента для этого там где box нужно указать второе
(box, и тут стиль псевдоэлемента) */
console.log(document.documentElement.clientWidth);
//теперь я получу сколько пользователь отлистал
сconsole.log(document.documentElement.scrollTop);
//покажет сколько пролестал 
//МОЖНО ЗАЙТИ НА УСЛОВНУЮ ВИКИПЕДИЮ И ПРОЛЕСТЫВАТЬ ТАК СТРАНИЧКИ ПОТОМ В КОНСОЛИ КОМАНДАМИ ТЕСТИТЬ
window.scrollBy(0, 400)
//от ЧЕКУЩЕГО ПОЛОЖЕНИЯ на страничке просклрю на 400 вниз
window.scrollTo(0, 400)//это от начала страницы скрол пойдет
// эти методы в будущем можно будет использовать по перемещению пользователю по кординатам страницы